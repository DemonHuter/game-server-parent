// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MessageId.proto

package com.game.proto.msgid;

/**
 * <pre>
 * 消息ID枚举
 * </pre>
 *
 * Protobuf enum {@code game.proto.msgid.MsgIdEnum}
 */
public enum MsgIdEnum
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <pre>
   * 未知消息类型
   * </pre>
   *
   * <code>MSG_UNKNOWN = 0;</code>
   */
  MSG_UNKNOWN(0),
  /**
   * <pre>
   * 系统消息 (1000-1200)
   * </pre>
   *
   * <code>MSG_SYSTEM_HEARTBEAT_REQ = 1000;</code>
   */
  MSG_SYSTEM_HEARTBEAT_REQ(1000),
  /**
   * <code>MSG_SYSTEM_HEARTBEAT_RES = 1001;</code>
   */
  MSG_SYSTEM_HEARTBEAT_RES(1001),
  /**
   * <pre>
   *系统错误
   * </pre>
   *
   * <code>MSG_SYSTEM_ERROR = 1002;</code>
   */
  MSG_SYSTEM_ERROR(1002),
  /**
   * <pre>
   *测试
   * </pre>
   *
   * <code>CS_test = 1500;</code>
   */
  CS_test(1500),
  /**
   * <code>SC_test = 1501;</code>
   */
  SC_test(1501),
  /**
   * <pre>
   * 用户认证 (2000-2999)
   * </pre>
   *
   * <code>CS_player_login = 2000;</code>
   */
  CS_player_login(2000),
  /**
   * <code>SC_player_login = 2001;</code>
   */
  SC_player_login(2001),
  /**
   * <code>CS_player_logout = 2002;</code>
   */
  CS_player_logout(2002),
  /**
   * <code>SC_player_logout = 2003;</code>
   */
  SC_player_logout(2003),
  /**
   * <code>SC_create_role = 2004;</code>
   */
  SC_create_role(2004),
  /**
   * <code>CS_create_role = 2005;</code>
   */
  CS_create_role(2005),
  /**
   * <pre>
   * 用户信息 (2100-2199)
   * </pre>
   *
   * <code>MSG_PLAYER_INFO_REQUEST = 2100;</code>
   */
  MSG_PLAYER_INFO_REQUEST(2100),
  /**
   * <code>MSG_PLAYER_INFO_RESPONSE = 2101;</code>
   */
  MSG_PLAYER_INFO_RESPONSE(2101),
  /**
   * <code>MSG_PLAYER_UPDATE_REQUEST = 2102;</code>
   */
  MSG_PLAYER_UPDATE_REQUEST(2102),
  /**
   * <code>MSG_PLAYER_UPDATE_RESPONSE = 2103;</code>
   */
  MSG_PLAYER_UPDATE_RESPONSE(2103),
  /**
   * <pre>
   * 聊天消息 (3000-3999)
   * </pre>
   *
   * <code>MSG_CHAT_MESSAGE_REQUEST = 3000;</code>
   */
  MSG_CHAT_MESSAGE_REQUEST(3000),
  /**
   * <code>MSG_CHAT_MESSAGE_RESPONSE = 3001;</code>
   */
  MSG_CHAT_MESSAGE_RESPONSE(3001),
  /**
   * <code>MSG_CHAT_BROADCAST = 3002;</code>
   */
  MSG_CHAT_BROADCAST(3002),
  UNRECOGNIZED(-1),
  ;

  /**
   * <pre>
   * 未知消息类型
   * </pre>
   *
   * <code>MSG_UNKNOWN = 0;</code>
   */
  public static final int MSG_UNKNOWN_VALUE = 0;
  /**
   * <pre>
   * 系统消息 (1000-1200)
   * </pre>
   *
   * <code>MSG_SYSTEM_HEARTBEAT_REQ = 1000;</code>
   */
  public static final int MSG_SYSTEM_HEARTBEAT_REQ_VALUE = 1000;
  /**
   * <code>MSG_SYSTEM_HEARTBEAT_RES = 1001;</code>
   */
  public static final int MSG_SYSTEM_HEARTBEAT_RES_VALUE = 1001;
  /**
   * <pre>
   *系统错误
   * </pre>
   *
   * <code>MSG_SYSTEM_ERROR = 1002;</code>
   */
  public static final int MSG_SYSTEM_ERROR_VALUE = 1002;
  /**
   * <pre>
   *测试
   * </pre>
   *
   * <code>CS_test = 1500;</code>
   */
  public static final int CS_test_VALUE = 1500;
  /**
   * <code>SC_test = 1501;</code>
   */
  public static final int SC_test_VALUE = 1501;
  /**
   * <pre>
   * 用户认证 (2000-2999)
   * </pre>
   *
   * <code>CS_player_login = 2000;</code>
   */
  public static final int CS_player_login_VALUE = 2000;
  /**
   * <code>SC_player_login = 2001;</code>
   */
  public static final int SC_player_login_VALUE = 2001;
  /**
   * <code>CS_player_logout = 2002;</code>
   */
  public static final int CS_player_logout_VALUE = 2002;
  /**
   * <code>SC_player_logout = 2003;</code>
   */
  public static final int SC_player_logout_VALUE = 2003;
  /**
   * <code>SC_create_role = 2004;</code>
   */
  public static final int SC_create_role_VALUE = 2004;
  /**
   * <code>CS_create_role = 2005;</code>
   */
  public static final int CS_create_role_VALUE = 2005;
  /**
   * <pre>
   * 用户信息 (2100-2199)
   * </pre>
   *
   * <code>MSG_PLAYER_INFO_REQUEST = 2100;</code>
   */
  public static final int MSG_PLAYER_INFO_REQUEST_VALUE = 2100;
  /**
   * <code>MSG_PLAYER_INFO_RESPONSE = 2101;</code>
   */
  public static final int MSG_PLAYER_INFO_RESPONSE_VALUE = 2101;
  /**
   * <code>MSG_PLAYER_UPDATE_REQUEST = 2102;</code>
   */
  public static final int MSG_PLAYER_UPDATE_REQUEST_VALUE = 2102;
  /**
   * <code>MSG_PLAYER_UPDATE_RESPONSE = 2103;</code>
   */
  public static final int MSG_PLAYER_UPDATE_RESPONSE_VALUE = 2103;
  /**
   * <pre>
   * 聊天消息 (3000-3999)
   * </pre>
   *
   * <code>MSG_CHAT_MESSAGE_REQUEST = 3000;</code>
   */
  public static final int MSG_CHAT_MESSAGE_REQUEST_VALUE = 3000;
  /**
   * <code>MSG_CHAT_MESSAGE_RESPONSE = 3001;</code>
   */
  public static final int MSG_CHAT_MESSAGE_RESPONSE_VALUE = 3001;
  /**
   * <code>MSG_CHAT_BROADCAST = 3002;</code>
   */
  public static final int MSG_CHAT_BROADCAST_VALUE = 3002;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static MsgIdEnum valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static MsgIdEnum forNumber(int value) {
    switch (value) {
      case 0: return MSG_UNKNOWN;
      case 1000: return MSG_SYSTEM_HEARTBEAT_REQ;
      case 1001: return MSG_SYSTEM_HEARTBEAT_RES;
      case 1002: return MSG_SYSTEM_ERROR;
      case 1500: return CS_test;
      case 1501: return SC_test;
      case 2000: return CS_player_login;
      case 2001: return SC_player_login;
      case 2002: return CS_player_logout;
      case 2003: return SC_player_logout;
      case 2004: return SC_create_role;
      case 2005: return CS_create_role;
      case 2100: return MSG_PLAYER_INFO_REQUEST;
      case 2101: return MSG_PLAYER_INFO_RESPONSE;
      case 2102: return MSG_PLAYER_UPDATE_REQUEST;
      case 2103: return MSG_PLAYER_UPDATE_RESPONSE;
      case 3000: return MSG_CHAT_MESSAGE_REQUEST;
      case 3001: return MSG_CHAT_MESSAGE_RESPONSE;
      case 3002: return MSG_CHAT_BROADCAST;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<MsgIdEnum>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      MsgIdEnum> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<MsgIdEnum>() {
          public MsgIdEnum findValueByNumber(int number) {
            return MsgIdEnum.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalStateException(
          "Can't get the descriptor of an unrecognized enum value.");
    }
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return com.game.proto.msgid.MessageId.getDescriptor().getEnumTypes().get(0);
  }

  private static final MsgIdEnum[] VALUES = values();

  public static MsgIdEnum valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private MsgIdEnum(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:game.proto.msgid.MsgIdEnum)
}

